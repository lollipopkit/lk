/*
导入路径为文件的路径：`test/module`
如果未设置别名，实际调用得使用class名称：`test2`
*/
import "test/module"
// 为导入的包设置别名
GF := import('test/gf')

func := fn (...) {
    // `#`获取长度，`...`为变长参数，`{}`构造Table
    // `#{...}`即获取变长参数的长度（有多少个参数）
    print(fmt('[args: %d]\t', #{...}), ...)
}

func(1!=2 and 3!=3)
test2:add()
func(test2.b)
test2:add()
func(test2['b'])
func(test2.const)

// "`" 包裹的str，为原始字符串，不会被转义
// 如果第一个字符为换行符`\n`，则第一个`\n`会被忽略
long := `
abc`

if #long >= 0 and '' {
    func(long, #long)
}

while true {
    if long != nil {
        func('break while')
    } else {
        break
    }
    os.sleep(100)
    long = nil
}

// 等于 `shy a = fn(b) {rt 3 ^ b, 2 ^ b}
a := fn(b) => 3 ^ b, 2 ^ b
func(a(2))

func('' and true and 1 ? 'support ternary exp' : 'unreachable')
func(6 ~/ 2, 6 & 2, 6 / 2)
func(_VERSION, math.pi)
// 与js类似，大部分类型都可转为json str
func(to_str(test2))

gf := new(GF)
gf2 := new(GF)
gf:herName('lxy')
gf2:hello()
gf:hello()